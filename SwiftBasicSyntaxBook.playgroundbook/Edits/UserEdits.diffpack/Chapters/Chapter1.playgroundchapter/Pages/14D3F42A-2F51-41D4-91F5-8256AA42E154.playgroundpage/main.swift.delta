<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>BaseFile</key>
	<string>Chapters/Chapter1.playgroundchapter/Pages/Template.playgroundpage/main.swift</string>
	<key>Diffs</key>
	<array>
		<dict>
			<key>ModifiedContent</key>
			<string>// Higher order functions receive closures as parameters.
// Official documentation: https://docs.swift.org/swift-book/LanguageGuide/Closures.html

import UIKit

// The method below is a closure.
// It receives a String then returns(-&gt;) a string.
func getName(_ name: String) -&gt; String {
    return "My name is \(name)"
}


var getNameClosure: (String) -&gt; String


// The method below receives the closure 'getName' as its parameter
// and the parameter 'name' used in the closure
// then returns the result 'getName(name)'.
func sayHello(getName: (String) -&gt; String,
              name: String) -&gt; String {
    return getName(name)
}

let result1 = sayHello(getName: getName(_: ), name: "Garlicvread")
print("result1: \(result1)")

// Example 1
let numbers = [34, 4, -3 , -12, 5, 9, 10, 91, 23, 6, 9]

// Transform the data type: Int -&gt; String
let stringNumbers = numbers.map { (element: Int) -&gt; String in
    return "\(element)"
}

let evenNumbers: [Int] = numbers.filter { element in
    return element % 2 == 0
}

let oddNumbers: [Int] = numbers.filter { element in
    return element % 2 != 0
}


// Example 2
func getWords(_ firstWord: String, _ lastWord: String) -&gt; String {
    return firstWord + " " + lastWord
}

func getWordsTwice(_ firstWord: String, _ lastWord: String) -&gt; String {
    return firstWord + " " + lastWord + " / REPEAT / " + firstWord + " " + lastWord
}

// Put the closure getWords as a parameter
func speakSomethin(getWords: (_ first: String, _ last: String) -&gt; String,
                   firstInput: String,
                   lastInput: String) -&gt; String {
    // Return the inputted function
    return getWords(firstInput, lastInput) 
}

let result2 = speakSomethin(getWords: getWords,
                            firstInput: "Hello,",
                            lastInput: "my name is Garlicvread.")
print("result2: \(result2)")

let result3 = speakSomethin(getWords: getWordsTwice,
                            firstInput: "Good to see you.",
                            lastInput: "I am Garlicvread.")
print("result3: \(result3)")
</string>
			<key>ModifiedRange</key>
			<string>{0, 2067}</string>
			<key>OriginalContent</key>
			<string>
</string>
			<key>OriginalRange</key>
			<string>{0, 1}</string>
		</dict>
	</array>
	<key>FormatVersion</key>
	<integer>2</integer>
</dict>
</plist>
